{"version":3,"file":"toast.js","sourceRoot":"","sources":["../../../src/lib/toast/toast.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  Injectable,\n  NgModule,\n  ModuleWithProviders,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  Overlay,\n  OverlayState,\n  OverlayRef,\n  ComponentPortal,\n  OVERLAY_PROVIDERS\n} from '../core';\n\nexport class Toast {\n  id: number;\n  isVisible: boolean;\n  constructor(public message: string) { }\n}\n\nexport class Md2ToastConfig {\n  duration: number = 3000;\n}\n\n@Injectable()\nexport class Md2Toast {\n  private index: number = 0;\n\n  _overlayRef: OverlayRef;\n  _toastInstance: Md2ToastComponent;\n\n  constructor(private _overlay: Overlay, private _config: Md2ToastConfig) { }\n\n  /**\n   * toast message\n   * @param toast string or object with message and other properties of toast\n   */\n  toast(message: string, duration?: number) {\n    this.show(message, duration);\n  }\n\n  /**\n   * show toast\n   * @param toastObj string or object with message and other properties of toast\n   */\n  show(message: string, duration?: number) {\n    let toast: Toast;\n    toast = new Toast(message);\n    if (duration) { this._config.duration = duration; }\n\n    if (toast) {\n      if (!this._toastInstance) {\n        let strategy = this._overlay.position().global().top('0').right('0');\n        let config = new OverlayState();\n        config.positionStrategy = strategy;\n\n        this._overlayRef = this._overlay.create(config);\n        let portal = new ComponentPortal(Md2ToastComponent);\n        this._toastInstance = this._overlayRef.attach(portal).instance;\n\n        this.setupToast(toast);\n\n      } else {\n        this.setupToast(toast);\n      }\n    }\n  }\n\n  /**\n   * toast timeout\n   * @param toastId\n   */\n  startTimeout(toastId: number) {\n    setTimeout(() => {\n      this.clear(toastId);\n    }, this._config.duration);\n  }\n\n  /**\n   * setup toast\n   * @param toast\n   */\n  setupToast(toast: Toast) {\n    toast.id = ++this.index;\n    this._toastInstance.add(toast);\n    this.startTimeout(toast.id);\n  }\n\n  /**\n   * clear specific toast\n   * @param toastId\n   */\n  clear(toastId: number) {\n    if (this._toastInstance) {\n      this._toastInstance.remove(toastId);\n      setTimeout(() => {\n        if (!this._toastInstance.hasToast()) { this.dispose(); }\n      }, 250);\n\n    }\n  }\n\n  /**\n   * clear all toasts\n   */\n  clearAll() {\n    if (this._toastInstance) {\n      this._toastInstance.removeAll();\n      setTimeout(() => {\n        if (!this._toastInstance.hasToast()) { this.dispose(); }\n      }, 250);\n\n    }\n  }\n\n  /**\n   * dispose all toasts\n   */\n  dispose() {\n    this._overlayRef.dispose();\n    this._overlayRef = null;\n    this._toastInstance = null;\n  }\n\n}\n\n@Component({\n  selector: 'md2-toast',\n  templateUrl: 'toast.html',\n  styleUrls: ['toast.css'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class Md2ToastComponent {\n  toasts: Toast[] = [];\n  maxShown = 5;\n\n  /**\n   * add toast\n   * @param toast toast object with all parameters\n   */\n  add(toast: Toast) {\n    setTimeout(() => {\n      toast.isVisible = true;\n    }, 1);\n    this.toasts.push(toast);\n    if (this.toasts.length > this.maxShown) {\n      this.toasts[0].isVisible = false;\n      setTimeout(() => {\n        this.toasts.splice(0, (this.toasts.length - this.maxShown));\n      }, 250);\n    }\n  }\n\n  /**\n   * remove toast\n   * @param toastId number of toast id\n   */\n  remove(toastId: number) {\n    this.toasts.forEach((t: any) => { if (t.id === toastId) { t.isVisible = false; } });\n    setTimeout(() => {\n      this.toasts = this.toasts.filter((toast) => { return toast.id !== toastId; });\n    }, 250);\n  }\n\n  /**\n   * remove all toasts\n   * @param toastId number of toast id\n   */\n  removeAll() {\n    this.toasts.forEach((t: any) => { t.isVisible = false; });\n    setTimeout(() => {\n      this.toasts = [];\n    }, 250);\n  }\n\n  /**\n   * check has any toast\n   * @return boolean\n   */\n  hasToast(): boolean { return this.toasts.length > 0; }\n\n}\n\nexport const MD2_TOAST_DIRECTIVES: any[] = [Md2ToastComponent];\n\n@NgModule({\n  imports: [CommonModule],\n  exports: MD2_TOAST_DIRECTIVES,\n  declarations: MD2_TOAST_DIRECTIVES,\n  entryComponents: MD2_TOAST_DIRECTIVES,\n  providers: [Md2Toast, Md2ToastConfig, OVERLAY_PROVIDERS]\n})\nexport class Md2ToastModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: Md2ToastModule,\n      providers: []\n    };\n  }\n}\n"]}